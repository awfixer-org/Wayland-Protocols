<?xml version="1.0" encoding="UTF-8"?>
<protocol name="cursor_image_v1">
  <copyright>
    Copyright 2025 Vlad Zahorodnii

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice (including the next
    paragraph) shall be included in all copies or substantial portions of the
    Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
  </copyright>

  <interface name="wp_cursor_image_manager_v1" version="1">
    <description summary="cursor image manager">
      This protocol allows for a Wayland client to set a cursor image to
      a pointer or a tablet tool.

      Unlike wl_pointer.set_cursor or zwp_tablet_tool_v2.set_cursor, the image
      and the hotspot updates are always atomic with wp_cursor_image_v1.

      The key words "must", "must not", "required", "shall", "shall not",
      "should", "should not", "recommended",  "may", and "optional" in this
      document are to be interpreted as described in IETF RFC 2119.

      Warning! The protocol described in this file is currently in the testing
      phase. Backward compatible changes may be added together with the
      corresponding interface version bump. Backward incompatible changes can
      only be done by creating a new major version of the extension.
    </description>

    <enum name="error">
      <entry name="role" value="0" summary="wl_surface has another role"/>
    </enum>

    <request name="destroy" type="destructor">
      <description summary="destroy the manager">
        Destroy the cursor image manager.
      </description>
    </request>

    <request name="get_cursor_image">
      <description summary="get cursor image">
        Create a cursor image for an existing surface. This assigns the role of
        cursor_image_v1, or raises a protocol error if another role is already
        assigned.
      </description>
      <arg name="cursor_image" type="new_id" interface="wp_cursor_image_v1"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>

    <request name="set_pointer_cursor">
      <description summary="set pointer cursor">
        Set the pointer surface, i.e., the surface that contains the
        pointer image (cursor).

        The cursor actually changes only if the pointer
        focus for this device is one of the requesting client's surfaces
        or the surface parameter is the current pointer surface. If
        there was a previous surface set with this request it is
        replaced.

        The serial parameter must match the latest wl_pointer.enter
        serial number sent to the client. Otherwise the request will be
        ignored.
      </description>
      <arg name="pointer" type="object" interface="wl_pointer"/>
      <arg name="serial" type="uint" summary="serial number of the enter event"/>
      <arg name="cursor" type="object" interface="wp_cursor_image_v1"/>
    </request>

    <request name="set_tablet_tool_v2_cursor">
      <description summary="set tablet tool cursor">
        Sets the surface of the cursor used for this tool on the given tablet.

        This request only takes effect if the tool is in proximity of one of
        the requesting client's surfaces or the cursor parameter is the current
        tablet tool cursor. If there was a previous surface set with this
        request it is replaced.

        The serial parameter must match the latest zwp_tablet_tool_v2.proximity_in
        serial number sent to the client. Otherwise the request will be
        ignored.
      </description>
      <arg name="tablet_tool" type="object" interface="zwp_tablet_tool_v2"/>
      <arg name="serial" type="uint" summary="serial number of the enter event"/>
      <arg name="cursor" type="object" interface="wp_cursor_image_v1"/>
    </request>
  </interface>

  <interface name="wp_cursor_image_v1" version="1">
    <description summary="cursor image">
      This interface allows clients to set the cursor image.
    </description>

    <request name="destroy" type="destructor">
      <description summary="destroy the cursor image">
        Destroy the cursor image. The cursor will be hidden.
      </description>
    </request>

    <request name="set_hotspot">
      <description summary="set cursor image hotspot">
        Set the cursor hotspot. The hotspot defines the position of the surface
        relative to the input device position.

        The top-left corner of the cursor surface is always at (px, py) - (x, y),
        where (px, py) are the coordinates of the input device, in surface-local
        coordinates.

        Cursor hotspot is double-buffered state, see wl_surface.commit.
      </description>
      <arg name="x" type="int" summary="surface-local x coordinate"/>
      <arg name="y" type="int" summary="surface-local y coordinate"/>
    </request>
  </interface>
</protocol>
